#
# Copyright 2015-2017 Telefónica Investigación y Desarrollo, S.A.U
#
# This file is part of fiware-cygnus (FIWARE project).
#
# fiware-cygnus is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General
# Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any
# later version.
# fiware-cygnus is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License along with fiware-cygnus. If not, see
# http://www.gnu.org/licenses/.
#
# For those usages not covered by the GNU Affero General Public License please contact with iot_support at tid dot es
#

# This file defines a set of grouping rules for context data grouping. It works by defining a set of fields within the
# Orion notification and a regular expression to be applied over the concatenation of those fields. If there is a
# matching then:
# - The destination within the rule is added to the Flume event headers.
# - The notified fiware-servicePath header is replaced by the configured one.
#
# Append as many matching rules as you need, following this format:
#
# {
#     "grouping_rules": [
#         {
#             "id": 1,
#             "fields": [
#             ],
#             "regex": "",
#             "destination": "",
#             "fiware_service_path": ""
#         },
#         ...
#     ]
# }
#
# Being:
# - id: A unique unsigned integer-based identifier.
# - fields: These are the fields that will be concatenated for regular expression matching. The available dictionary of
#   fields for concatenation is "entityId", "entityType" and "servicePath". The order of these fields is important
#   since the concatenation is made from left to right.
# - regex: Java-like regular expression to be applied on the concatenated fields. Special characters like '\' must be
#   escaped ('\' is escaped as "\\").
# - destination: Name of the HDFS file or CKAN resource where the data will be effectively persisted. In the case of
#   MySQL, Mongo and STH Comet, this sufixes the table/collection name.
#   Please, have a look to doc/design/naming_conventions.md for more details.
# - fiware_service_path: New fiware-servicePath replacing the notified one. The sinks will translate this into the name
#   of the HDFS folder or CKAN package where the above destination entity will be placed. In the case of MySQL, Mongo
#   and STH Comet, this prefixes the table/collection name. Please, have a look to doc/design/naming_conventions.md for more
#   details. It must start with `/` or the whole rule will be discarded.
#
# More detailed information regarding this feature can be found at:
# https://github.com/telefonicaid/fiware-cygnus/blob/master/doc/design/interceptors.md#groupinginterceptor-interceptor

#{
#    "grouping_rules": [
#        {
#            "id": 1,
#            "fields": [
#                "entityType"
#            ],
#            "regex": "dummyregex1",
#            "destination": "dummydest1",
#            "fiware_service_path": "dummyservpath1"
#        },
#        {
#            "id": 2,
#            "fields": [
#                "entityId",
#                "entityType"
#            ],
#            "regex": "dummyregex2",
#            "destination": "dummuydes2",
#            "fiware_service_path": "dummyservpath2"
#        }
#    ]
#}
