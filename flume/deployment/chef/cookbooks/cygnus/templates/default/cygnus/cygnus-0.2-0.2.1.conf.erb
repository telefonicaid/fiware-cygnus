# APACHE_FLUME_HOME/conf/cygnus.conf

# The next tree fields set the sources, sinks and channels used by Cygnus. You could use different names than the
# ones suggested below, but in that case make sure you keep coherence in properties names along the configuration file.
# Regarding sinks, you can use multiple ones at the same time; the only requirement is to provide a channel for each
# one of them (this example shows how to configure 3 sinks at the same time).
cygnusagent.sources = http-source
cygnusagent.sinks = hdfs-sink mysql-sink ckan-sink
cygnusagent.channels = hdfs-channel mysql-channel ckan-channel

#=============================================
# source configuration
# channel name where to write the notification events
cygnusagent.sources.http-source.channels = hdfs-channel mysql-channel ckan-channel
# source class, must not be changed
cygnusagent.sources.http-source.type = org.apache.flume.source.http.HTTPSource
# listening port the Flume source will use for receiving incoming notifications
cygnusagent.sources.http-source.port = <%= @port %>
# Flume handler that will parse the notifications, must not be changed
cygnusagent.sources.http-source.handler = es.tid.fiware.fiwareconnectors.cygnus.handlers.OrionRestHandler
# regular expression for the orion version the notifications will have in their headers
cygnusagent.sources.http-source.handler.orion_version = <%= @orion_version %>
# URL target
cygnusagent.sources.http-source.handler.notification_target = /notify

# ============================================
# OrionHDFSSink configuration
# channel name from where to read notification events
cygnusagent.sinks.hdfs-sink.channel = hdfs-channel
# sink class, must not be changed
cygnusagent.sinks.hdfs-sink.type = es.tid.fiware.fiwareconnectors.cygnus.sinks.OrionHDFSSink
# The FQDN/IP address of the Cosmos deployment where the notification events will be persisted
cygnusagent.sinks.hdfs-sink.cosmos_host = <%= @cosmos_host %>
# port of the Cosmos service listening for persistence operations; 14000 for httpfs, 50070 for webhdfs and free choice for inifinty
cygnusagent.sinks.hdfs-sink.cosmos_port = <%= @cosmos_port %>
# username allowed to write in HDFS (/user/myusername)
cygnusagent.sinks.hdfs-sink.cosmos_username = <%= @cosmos_username %>
# dataset where to persist the data (/user/myusername/mydataset)
cygnusagent.sinks.hdfs-sink.cosmos_dataset = <%= @cosmos_dataset %>
# HDFS backend type (webhdfs, httpfs or infinity)
cygnusagent.sinks.hdfs-sink.hdfs_api = <%= @hdfs_api %>

# ============================================
# OrionCKANSink configuration
# channel name from where to read notification events
cygnusagent.sinks.ckan-sink.channel = ckan-channel
# sink class, must not be changed
cygnusagent.sinks.ckan-sink.type = es.tid.fiware.fiwareconnectors.cygnus.sinks.OrionCKANSink
# the CKAN API key to use
cygnusagent.sinks.ckan-sink.api_key = <%= @ckan_api_key %>
# the FQDN/IP address for the CKAN API endpoint
cygnusagent.sinks.ckan-sink.ckan_host = <%= @ckan_host %>
# the port for the CKAN API endpoint
cygnusagent.sinks.ckan-sink.ckan_port = <%= @ckan_port %>
# the dasaset (i.e. package) name to use. It will be created at Flume startup time if it doesn't previously exist
cygnusagent.sinks.ckan-sink.dataset = <%= @ckan_dataset %>

# ============================================
# OrionMySQLSink configuration
# channel name from where to read notification events
cygnusagent.sinks.mysql-sink.channel = mysql-channel
# sink class, must not be changed
cygnusagent.sinks.mysql-sink.type = es.tid.fiware.fiwareconnectors.cygnus.sinks.OrionMySQLSink
# the FQDN/IP address where the MySQL server runs 
cygnusagent.sinks.mysql-sink.mysql_host = <%= @mysql_host %>
# the port where the MySQL server listes for incomming connections
cygnusagent.sinks.mysql-sink.mysql_port = <%= @mysql_port %>
# a valid user in the MySQL server
cygnusagent.sinks.mysql-sink.mysql_username = <%= @mysql_username %>
# password for the user above
cygnusagent.sinks.mysql-sink.mysql_password = <%= @mysql_password %>
# how the attributes are stored, either per row either per column (row, column)
cygnusagent.sinks.mysql-sink.attr_persistence = <%= @mysql_persistence %>

#=============================================
# hdfs-channel configuration
# channel type (must not be changed)
cygnusagent.channels.hdfs-channel.type = memory
# capacity of the channel
cygnusagent.channels.hdfs-channel.capacity = <%= @hdfs_channel_capacity %>
# amount of bytes that can be sent per transaction
cygnusagent.channels.hdfs-channel.transactionCapacity = <%= @hdfs_channel_trans_capacity %>

#=============================================
# ckan-channel configuration
# channel type (must not be changed)
cygnusagent.channels.ckan-channel.type = memory
# capacity of the channel
cygnusagent.channels.ckan-channel.capacity = <%= @ckan_channel_capacity %>
# amount of bytes that can be sent per transaction
cygnusagent.channels.ckan-channel.transactionCapacity = <%= @ckan_channel_trans_capacity %>

#=============================================
# mysql-channel configuration
# channel type (must not be changed)
cygnusagent.channels.mysql-channel.type = memory
# capacity of the channel
cygnusagent.channels.mysql-channel.capacity = <%= @mysql_channel_capacity %>
# amount of bytes that can be sent per transaction
cygnusagent.channels.mysql-channel.transactionCapacity = <%= @mysql_channel_trans_capacity %>
